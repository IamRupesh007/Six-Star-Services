{"ast":null,"code":"import { fetchAllSuccess, fetchAllError, deleteDataSuccess, deleteDataError } from \"../actions/admin/adminActions\";\nimport { fetchSPBySTSuccess, fetchSPBySTError, createServiceSuccess, createServiceError, fetchServicesSuccess, fetchServicesError, updateServiceSuccess, updateServiceError } from \"../actions/customer/servicesActions\";\nimport { loginSuccess, loginError } from \"../actions/login/loginActions\";\nimport { registerSuccess, registerError } from \"../actions/login/registerActions\";\nimport { axiosAPI } from \"./config\";\nexport var login = function login(req) {\n  var userUrl = req.userUrl,\n      email = req.email,\n      password = req.password;\n  return function (dispatch) {\n    axiosAPI.get(\"\".concat(userUrl, \"/login/\").concat(email, \"/\").concat(password)).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(loginSuccess(res));\n    }).catch(function (error) {\n      return dispatch(loginError(error));\n    });\n  };\n};\nexport var register = function register(request) {\n  console.log(request);\n  var userUrl = request.userUrl,\n      req = request.req;\n  return function (dispatch) {\n    axiosAPI.post(\"\".concat(userUrl, \"/create\"), req).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(registerSuccess(res));\n    }).catch(function (error) {\n      return dispatch(registerError(error));\n    });\n  };\n};\n/**\r\n * fetching service providers by service type\r\n */\n\nexport var fetchSPByST = function fetchSPByST(serviceType) {\n  return function (dispatch) {\n    axiosAPI.get(\"provider/get/\".concat(serviceType)).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(fetchSPBySTSuccess(res));\n    }).catch(function (error) {\n      return dispatch(fetchSPBySTError(error));\n    });\n  };\n};\n/**\r\n * fetching service request for users and service providers\r\n */\n\nexport var fetchServiceRequestsById = function fetchServiceRequestsById(userUrl, id) {\n  return function (dispatch) {\n    axiosAPI.get(\"service-request/\".concat(userUrl, \"/\").concat(id)).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(fetchServicesSuccess(res));\n    }).catch(function (error) {\n      return dispatch(fetchServicesError(error));\n    });\n  };\n};\nexport var createService = function createService(request) {\n  return function (dispatch) {\n    axiosAPI.post(\"service-request/create\", request).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(createServiceSuccess(res));\n    }).catch(function (error) {\n      return dispatch(createServiceError(error));\n    });\n  };\n};\nexport var updateService = function updateService(id) {\n  return function (dispatch) {\n    axiosAPI.put(\"service-request/done/\".concat(id)).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(updateServiceSuccess(res));\n    }).catch(function (error) {\n      return dispatch(updateServiceError(error));\n    });\n  };\n};\nexport var fetchAll = function fetchAll() {\n  return function (dispatch) {\n    axiosAPI.get(\"user/all\").then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(fetchAllSuccess(res));\n    }).catch(function (error) {\n      return dispatch(fetchAllError(error));\n    });\n  };\n};\nexport var deleteData = function deleteData(req) {\n  var url = req.url,\n      id = req.id;\n  return function (dispatch) {\n    axiosAPI.delete(\"\".concat(url, \"/remove/\").concat(id)).then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      return dispatch(deleteDataSuccess(res));\n    }).catch(function (error) {\n      return dispatch(deleteDataError(error));\n    });\n  };\n};","map":{"version":3,"names":["fetchAllSuccess","fetchAllError","deleteDataSuccess","deleteDataError","fetchSPBySTSuccess","fetchSPBySTError","createServiceSuccess","createServiceError","fetchServicesSuccess","fetchServicesError","updateServiceSuccess","updateServiceError","loginSuccess","loginError","registerSuccess","registerError","axiosAPI","login","req","userUrl","email","password","dispatch","get","then","res","data","catch","error","register","request","console","log","post","fetchSPByST","serviceType","fetchServiceRequestsById","id","createService","updateService","put","fetchAll","deleteData","url","delete"],"sources":["C:/Users/Lenovo/Desktop/Project/Frontend/src/redux/services/services.js"],"sourcesContent":["import {\r\n  fetchAllSuccess,\r\n  fetchAllError,\r\n  deleteDataSuccess,\r\n  deleteDataError,\r\n} from \"../actions/admin/adminActions\";\r\nimport {\r\n  fetchSPBySTSuccess,\r\n  fetchSPBySTError,\r\n  createServiceSuccess,\r\n  createServiceError,\r\n  fetchServicesSuccess,\r\n  fetchServicesError,\r\n  updateServiceSuccess,\r\n  updateServiceError,\r\n} from \"../actions/customer/servicesActions\";\r\nimport { loginSuccess, loginError } from \"../actions/login/loginActions\";\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n} from \"../actions/login/registerActions\";\r\nimport { axiosAPI } from \"./config\";\r\n\r\nexport const login = (req) => {\r\n  const { userUrl, email, password } = req;\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .get(`${userUrl}/login/${email}/${password}`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(loginSuccess(res)))\r\n      .catch((error) => dispatch(loginError(error)));\r\n  };\r\n};\r\n\r\nexport const register = (request) => {\r\n  console.log(request);\r\n  const { userUrl, req } = request;\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .post(`${userUrl}/create`, req)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(registerSuccess(res)))\r\n      .catch((error) => dispatch(registerError(error)));\r\n  };\r\n};\r\n/**\r\n * fetching service providers by service type\r\n */\r\nexport const fetchSPByST = (serviceType) => {\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .get(`provider/get/${serviceType}`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(fetchSPBySTSuccess(res)))\r\n      .catch((error) => dispatch(fetchSPBySTError(error)));\r\n  };\r\n};\r\n/**\r\n * fetching service request for users and service providers\r\n */\r\nexport const fetchServiceRequestsById = (userUrl, id) => {\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .get(`service-request/${userUrl}/${id}`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(fetchServicesSuccess(res)))\r\n      .catch((error) => dispatch(fetchServicesError(error)));\r\n  };\r\n};\r\n\r\nexport const createService = (request) => {\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .post(`service-request/create`, request)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(createServiceSuccess(res)))\r\n      .catch((error) => dispatch(createServiceError(error)));\r\n  };\r\n};\r\n\r\nexport const updateService = (id) => {\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .put(`service-request/done/${id}`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(updateServiceSuccess(res)))\r\n      .catch((error) => dispatch(updateServiceError(error)));\r\n  };\r\n};\r\n\r\nexport const fetchAll = () => {\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .get(`user/all`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(fetchAllSuccess(res)))\r\n      .catch((error) => dispatch(fetchAllError(error)));\r\n  };\r\n};\r\n\r\nexport const deleteData = (req) => {\r\n  const { url, id } = req;\r\n  return (dispatch) => {\r\n    axiosAPI\r\n      .delete(`${url}/remove/${id}`)\r\n      .then((res) => res.data)\r\n      .then((res) => dispatch(deleteDataSuccess(res)))\r\n      .catch((error) => dispatch(deleteDataError(error)));\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}