{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\src\\\\pages\\\\viewAllData\\\\index.js\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { deleteData, fetchAll } from \"../../redux/services/services\";\nimport CustomTable from \"../../components/table\";\nimport { ADMIN, CUSTOMER, SERVICE_PROVIDER, SERVICE_REQUEST } from \"../../constants/otherConstants\";\nvar headerServices = [{\n  headerName: \"Status\",\n  field: \"status\"\n}, {\n  headerName: \"Created On\",\n  field: \"createDate\",\n  type: \"date\"\n}, {\n  headerName: \"Modified On\",\n  field: \"modifyDate\",\n  type: \"date\"\n}, {\n  headerName: \"Completed On\",\n  field: \"completionDate\",\n  type: \"date\"\n}, {\n  headerName: \"Service Type\",\n  field: \"serviceType\"\n}, {\n  headerName: \"Service Request For\",\n  field: \"customerName\"\n}, {\n  headerName: \"Service Provider Name\",\n  field: \"serviceProviderName\"\n}];\nvar headerUser = [{\n  headerName: \"First Name\",\n  field: \"firstName\"\n}, {\n  headerName: \"Middle Name\",\n  field: \"middleName\"\n}, {\n  headerName: \"Last Name\",\n  field: \"lastName\"\n}, {\n  headerName: \"Phone Number\",\n  field: \"phoneNumber\"\n}, {\n  headerName: \"Registered Email \",\n  field: \"email\"\n}];\nvar headerServiceProvider = [{\n  headerName: \"Service Provider Name\",\n  field: \"serviceProviderName\"\n}].concat(headerUser, [{\n  headerName: \"Service Type Provided\",\n  field: \"serviceTypes\"\n}]);\n\nvar ViewUserAndServices = function ViewUserAndServices(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(headerUser),\n      _useState6 = _slicedToArray(_useState5, 2),\n      headers = _useState6[0],\n      setHeaders = _useState6[1];\n\n  useEffect(function () {\n    var allData = props.allData,\n        fetchAll = props.fetchAll;\n\n    if (Object.keys(allData).length === 0) {\n      fetchAll();\n    }\n  }, []);\n  useEffect(function () {\n    var allData = props.allData,\n        dataType = props.dataType;\n\n    if (Object.keys(allData).length > 0) {\n      var serviceProviders = allData.serviceProviders,\n          customers = allData.customers,\n          admins = allData.admins,\n          serviceRequests = allData.serviceRequests;\n\n      switch (dataType) {\n        case CUSTOMER:\n          setLabel(\"All Customers\");\n          setData(customers);\n          setHeaders(headerUser);\n          break;\n\n        case SERVICE_PROVIDER:\n          setData(serviceProviders);\n          setLabel(\"All Service Providers\");\n          setHeaders(headerServiceProvider);\n          break;\n\n        case ADMIN:\n          setData(admins);\n          setLabel(\"All Admins\");\n          setHeaders(headerUser);\n          break;\n\n        case SERVICE_REQUEST:\n          setData(serviceRequests);\n          setLabel(\"All Service Requests\");\n          setHeaders(headerServices);\n          break;\n      }\n    }\n  }, [props.allData, props]);\n  useEffect(function () {\n    var fetchAll = props.fetchAll,\n        delRes = props.delRes;\n\n    if (Object.keys(delRes).length > 0) {\n      fetchAll();\n    }\n  }, [props.delRes]);\n  var user = props.user,\n      dataType = props.dataType,\n      deleteData = props.deleteData;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(CustomTable, {\n    data: data,\n    headers: headers,\n    label: label,\n    user: user,\n    dataType: dataType,\n    deleteData: deleteData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allData: state.fetchAllReducer.allData,\n    delRes: state.deleteDataReducer.delRes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchAll: fetchAll,\n    deleteData: deleteData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewUserAndServices);","map":{"version":3,"names":["bindActionCreators","connect","React","useEffect","useState","Helmet","deleteData","fetchAll","CustomTable","ADMIN","CUSTOMER","SERVICE_PROVIDER","SERVICE_REQUEST","headerServices","headerName","field","type","headerUser","headerServiceProvider","ViewUserAndServices","props","data","setData","label","setLabel","headers","setHeaders","allData","Object","keys","length","dataType","serviceProviders","customers","admins","serviceRequests","delRes","user","mapStateToProps","state","fetchAllReducer","deleteDataReducer","mapDispatchToProps","dispatch"],"sources":["C:/Users/Lenovo/Desktop/Project/Frontend/src/pages/viewAllData/index.js"],"sourcesContent":["import { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { deleteData, fetchAll } from \"../../redux/services/services\";\r\nimport CustomTable from \"../../components/table\";\r\nimport {\r\n  ADMIN,\r\n  CUSTOMER,\r\n  SERVICE_PROVIDER,\r\n  SERVICE_REQUEST,\r\n} from \"../../constants/otherConstants\";\r\n\r\nconst headerServices = [\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"status\",\r\n  },\r\n  {\r\n    headerName: \"Created On\",\r\n    field: \"createDate\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Modified On\",\r\n    field: \"modifyDate\",\r\n\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Completed On\",\r\n    field: \"completionDate\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Service Type\",\r\n    field: \"serviceType\",\r\n  },\r\n\r\n  {\r\n    headerName: \"Service Request For\",\r\n    field: \"customerName\",\r\n  },\r\n  {\r\n    headerName: \"Service Provider Name\",\r\n    field: \"serviceProviderName\",\r\n  },\r\n];\r\n\r\nconst headerUser = [\r\n  {\r\n    headerName: \"First Name\",\r\n    field: \"firstName\",\r\n  },\r\n  {\r\n    headerName: \"Middle Name\",\r\n    field: \"middleName\",\r\n  },\r\n  {\r\n    headerName: \"Last Name\",\r\n    field: \"lastName\",\r\n  },\r\n  {\r\n    headerName: \"Phone Number\",\r\n    field: \"phoneNumber\",\r\n  },\r\n  {\r\n    headerName: \"Registered Email \",\r\n    field: \"email\",\r\n  },\r\n];\r\n\r\nconst headerServiceProvider = [\r\n  {\r\n    headerName: \"Service Provider Name\",\r\n    field: \"serviceProviderName\",\r\n  },\r\n  ...headerUser,\r\n\r\n  {\r\n    headerName: \"Service Type Provided\",\r\n    field: \"serviceTypes\",\r\n  },\r\n];\r\n\r\nconst ViewUserAndServices = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [label, setLabel] = useState(\"\");\r\n\r\n  const [headers, setHeaders] = useState(headerUser);\r\n\r\n  useEffect(() => {\r\n    const { allData, fetchAll } = props;\r\n\r\n    if (Object.keys(allData).length === 0) {\r\n      fetchAll();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { allData, dataType } = props;\r\n\r\n    if (Object.keys(allData).length > 0) {\r\n      const { serviceProviders, customers, admins, serviceRequests } = allData;\r\n\r\n      switch (dataType) {\r\n        case CUSTOMER:\r\n          setLabel(\"All Customers\");\r\n          setData(customers);\r\n          setHeaders(headerUser);\r\n          break;\r\n        case SERVICE_PROVIDER:\r\n          setData(serviceProviders);\r\n          setLabel(\"All Service Providers\");\r\n          setHeaders(headerServiceProvider);\r\n          break;\r\n        case ADMIN:\r\n          setData(admins);\r\n          setLabel(\"All Admins\");\r\n          setHeaders(headerUser);\r\n          break;\r\n        case SERVICE_REQUEST:\r\n          setData(serviceRequests);\r\n          setLabel(\"All Service Requests\");\r\n          setHeaders(headerServices);\r\n          break;\r\n      }\r\n    }\r\n  }, [props.allData, props]);\r\n\r\n  useEffect(() => {\r\n    const { fetchAll, delRes } = props;\r\n    if (Object.keys(delRes).length > 0) {\r\n      fetchAll();\r\n    }\r\n  }, [props.delRes]);\r\n\r\n  const { user, dataType, deleteData } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>{label}</title>\r\n      </Helmet>\r\n      <CustomTable\r\n        data={data}\r\n        headers={headers}\r\n        label={label}\r\n        user={user}\r\n        dataType={dataType}\r\n        deleteData={deleteData}\r\n      />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allData: state.fetchAllReducer.allData,\r\n  delRes: state.deleteDataReducer.delRes,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ fetchAll, deleteData }, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewUserAndServices);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}