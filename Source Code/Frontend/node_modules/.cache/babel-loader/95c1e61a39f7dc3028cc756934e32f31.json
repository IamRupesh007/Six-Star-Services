{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\src\\\\components\\\\registration\\\\index.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Button, Typography, IconButton, InputAdornment, Alert, AlertTitle } from \"@mui/material\";\nimport \"./style.css\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { ARCHITECT, CONTRACTOR, CUSTOMER, ELECTRIC, INTERIOR_DESIGN, PAINT, PLUMBING, SERVICE_PROVIDER } from \"../../constants/otherConstants\";\nimport SelectValidatorCustom from \"../../utils/components/SelectValidatorCustom\";\nvar userForm = [{\n  value: \"firstName\",\n  label: \"First Name\",\n  validators: [\"required\"],\n  errorMessages: [\"First name is required\"],\n  required: true\n}, {\n  value: \"middleName\",\n  label: \"Middle Name\",\n  validators: [],\n  errorMessages: [],\n  required: false\n}, {\n  value: \"lastName\",\n  label: \"Last Name\",\n  validators: [\"required\"],\n  errorMessages: [\"Last name is required\"],\n  required: true\n}, {\n  value: \"phoneNumber\",\n  label: \"Phone\",\n  validators: [],\n  errorMessages: [],\n  required: false\n}, {\n  value: \"email\",\n  label: \"Email\",\n  validators: [\"required\", \"isEmail\"],\n  errorMessages: [\"Email is required\", \"Enter valid email\"],\n  required: true\n}, {\n  value: \"password\",\n  label: \"Password\",\n  validators: [\"required\"],\n  errorMessages: [\"Password is required\"],\n  required: true\n}, {\n  value: \"addressLine1\",\n  label: \"Address Line 1\",\n  validators: [\"required\"],\n  errorMessages: [\"Address Line 1 is required\"],\n  required: true\n}, {\n  value: \"addressLine2\",\n  label: \"Address Line 2\",\n  validators: [],\n  errorMessages: [],\n  required: false\n}, {\n  value: \"city\",\n  label: \"City\",\n  validators: [\"required\"],\n  errorMessages: [\"City is required\"],\n  required: true\n}, {\n  value: \"state\",\n  label: \"State\",\n  validators: [\"required\"],\n  errorMessages: [\"State is required\"],\n  required: true\n}];\nvar serviceTypes = [{\n  label: \"Plumbing\",\n  value: PLUMBING\n}, {\n  label: \"Electric\",\n  value: ELECTRIC\n}, {\n  label: \"Contractor\",\n  value: CONTRACTOR\n}, {\n  label: \"Interior Design\",\n  value: INTERIOR_DESIGN\n}, {\n  label: \"Paint\",\n  value: PAINT\n}, {\n  label: \"Architect\",\n  value: ARCHITECT\n}];\n\nvar RegistrationForm = function RegistrationForm(props) {\n  var _useState = useState({\n    user: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      state: \"\",\n      role: \"\"\n    },\n    password: \"\",\n    serviceProvider: {\n      serviceProviderName: \"\",\n      serviceTypes: [\"\"]\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      regForm = _useState2[0],\n      setRegForm = _useState2[1];\n\n  var _useState3 = useState(\"login_customer_image\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageClass = _useState4[0],\n      setImageClass = _useState4[1];\n\n  var _useState5 = useState(\"Customer\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      label = _useState6[0],\n      setLabel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1];\n\n  var _useState9 = useState(\"/login\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginTo = _useState10[0],\n      setLoginTo = _useState10[1];\n\n  useEffect(function () {\n    var userType = props.userType;\n\n    switch (userType) {\n      case CUSTOMER:\n        setImageClass(\"reg_customer_image\");\n        setLabel(\"Customer\");\n        break;\n\n      case SERVICE_PROVIDER:\n        setImageClass(\"reg_service_image\");\n        setLabel(\"Service Provider\");\n        setLoginTo(\"/login/service\");\n        break;\n\n      default:\n        setImageClass(\"reg_customer_image\");\n        setLabel(\"Customer\");\n        break;\n    }\n  }, [props.userType]);\n\n  var onChange = function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === \"password\") {\n      setRegForm(_objectSpread({}, regForm, {\n        password: value\n      }));\n    } else if (name === \"serviceProviderName\") {\n      var serviceProvider = regForm.serviceProvider;\n      serviceProvider.serviceProviderName = value;\n      setRegForm(_objectSpread({}, regForm, {\n        serviceProvider: serviceProvider\n      }));\n    } else if (name === \"serviceTypes\") {\n      var _serviceProvider = regForm.serviceProvider;\n      _serviceProvider.serviceTypes[0] = value;\n      setRegForm(_objectSpread({}, regForm, {\n        serviceProvider: _serviceProvider\n      }));\n    } else {\n      var user = regForm.user;\n      user[name] = value;\n      setRegForm(_objectSpread({}, regForm, {\n        user: user\n      }));\n    }\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    var onSubmit = props.onSubmit,\n        userType = props.userType;\n    var user = regForm.user,\n        password = regForm.password,\n        serviceProvider = regForm.serviceProvider;\n\n    if (userType === CUSTOMER) {\n      user.role = CUSTOMER;\n      onSubmit({\n        user: user,\n        password: password\n      });\n    } else {\n      user.role = SERVICE_PROVIDER;\n      onSubmit({\n        user: user,\n        password: password,\n        serviceProvider: serviceProvider\n      });\n    }\n  };\n\n  var userType = props.userType,\n      message = props.message,\n      error = props.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reg_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"half\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reg_form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    style: {\n      border: \"transparent\"\n    },\n    noValidate: true,\n    validated: \"true\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"reg_form_heading\",\n    variant: \"h6\",\n    component: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, label, \" Registration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reg_form_grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, userType === SERVICE_PROVIDER && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    name: \"serviceProviderName\",\n    value: regForm.serviceProvider[\"serviceProviderName\"],\n    label: \"Service Provider Name\",\n    fullWidth: true,\n    onChange: onChange,\n    validators: [\"required\"],\n    errorMessages: [\"Service Provder Name is required\"],\n    variant: \"outlined\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidatorCustom, {\n    options: serviceTypes,\n    fullWidth: true,\n    name: \"serviceTypes\",\n    inputLabel: \"Select Service Type  *\",\n    value: regForm.serviceProvider.serviceTypes[0],\n    onChange: onChange,\n    validators: [\"required\"],\n    errorMessages: [\"this field is required\"],\n    variant: \"outlined\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }))), userForm.map(function (x, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      name: x.value,\n      value: x.value === \"password\" ? regForm[x.value] : regForm.user[x.value],\n      type: x.value !== \"password\" ? \"text\" : showPassword ? \"text\" : \"password\",\n      label: x.label,\n      fullWidth: true,\n      onChange: onChange,\n      validators: x.validators,\n      errorMessages: x.errorMessages,\n      variant: \"outlined\",\n      required: x.required,\n      InputProps: x.value === \"password\" ? {\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          value: \"isPasswordShown\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: function onClick() {\n            return setShowPassword(!showPassword);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 35\n          }\n        }, showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 39\n          }\n        }) : /*#__PURE__*/React.createElement(Visibility, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 39\n          }\n        })))\n      } : {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Register Now\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), message && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    severity: error ? \"error\" : \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AlertTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, error ? \"Oops !!\" : \"Good Job !!!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, error ? \"Some thing went wrong, this can be a reason:-\".concat(message) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }, \"Good Job !! \".concat(message, \", to login,\"), /*#__PURE__*/React.createElement(Link, {\n    to: loginTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, \"click here\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"Already registered? \", /*#__PURE__*/React.createElement(Link, {\n    to: loginTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 35\n    }\n  }, \"Click here to login\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"half\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: imageClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default RegistrationForm;","map":{"version":3,"names":["React","useState","useEffect","Link","Visibility","VisibilityOff","Button","Typography","IconButton","InputAdornment","Alert","AlertTitle","ValidatorForm","TextValidator","ARCHITECT","CONTRACTOR","CUSTOMER","ELECTRIC","INTERIOR_DESIGN","PAINT","PLUMBING","SERVICE_PROVIDER","SelectValidatorCustom","userForm","value","label","validators","errorMessages","required","serviceTypes","RegistrationForm","props","user","firstName","middleName","lastName","phoneNumber","email","addressLine1","addressLine2","city","state","role","password","serviceProvider","serviceProviderName","regForm","setRegForm","imageClass","setImageClass","setLabel","showPassword","setShowPassword","loginTo","setLoginTo","userType","onChange","e","target","name","onSubmit","preventDefault","message","error","border","map","x","i","endAdornment"],"sources":["C:/Users/Lenovo/Desktop/Project/Frontend/src/components/registration/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\nimport {\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  InputAdornment,\r\n  Alert,\r\n  AlertTitle,\r\n} from \"@mui/material\";\r\nimport \"./style.css\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  ARCHITECT,\r\n  CONTRACTOR,\r\n  CUSTOMER,\r\n  ELECTRIC,\r\n  INTERIOR_DESIGN,\r\n  PAINT,\r\n  PLUMBING,\r\n  SERVICE_PROVIDER,\r\n} from \"../../constants/otherConstants\";\r\nimport SelectValidatorCustom from \"../../utils/components/SelectValidatorCustom\";\r\n\r\nconst userForm = [\r\n  {\r\n    value: \"firstName\",\r\n    label: \"First Name\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"First name is required\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"middleName\",\r\n    label: \"Middle Name\",\r\n    validators: [],\r\n    errorMessages: [],\r\n    required: false,\r\n  },\r\n  {\r\n    value: \"lastName\",\r\n    label: \"Last Name\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"Last name is required\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"phoneNumber\",\r\n    label: \"Phone\",\r\n    validators: [],\r\n    errorMessages: [],\r\n    required: false,\r\n  },\r\n\r\n  {\r\n    value: \"email\",\r\n    label: \"Email\",\r\n    validators: [\"required\", \"isEmail\"],\r\n    errorMessages: [\"Email is required\", \"Enter valid email\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"password\",\r\n    label: \"Password\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"Password is required\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"addressLine1\",\r\n    label: \"Address Line 1\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"Address Line 1 is required\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"addressLine2\",\r\n    label: \"Address Line 2\",\r\n    validators: [],\r\n    errorMessages: [],\r\n    required: false,\r\n  },\r\n\r\n  {\r\n    value: \"city\",\r\n    label: \"City\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"City is required\"],\r\n    required: true,\r\n  },\r\n  {\r\n    value: \"state\",\r\n    label: \"State\",\r\n    validators: [\"required\"],\r\n    errorMessages: [\"State is required\"],\r\n    required: true,\r\n  },\r\n];\r\n\r\nconst serviceTypes = [\r\n  { label: \"Plumbing\", value: PLUMBING },\r\n  { label: \"Electric\", value: ELECTRIC },\r\n  { label: \"Contractor\", value: CONTRACTOR },\r\n  { label: \"Interior Design\", value: INTERIOR_DESIGN },\r\n  { label: \"Paint\", value: PAINT },\r\n  { label: \"Architect\", value: ARCHITECT },\r\n];\r\nconst RegistrationForm = (props) => {\r\n  const [regForm, setRegForm] = useState({\r\n    user: {\r\n      firstName: \"\",\r\n      middleName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      addressLine1: \"\",\r\n      addressLine2: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      role: \"\",\r\n    },\r\n    password: \"\",\r\n    serviceProvider: {\r\n      serviceProviderName: \"\",\r\n      serviceTypes: [\"\"],\r\n    },\r\n  });\r\n  const [imageClass, setImageClass] = useState(\"login_customer_image\");\r\n  const [label, setLabel] = useState(\"Customer\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loginTo, setLoginTo] = useState(\"/login\");\r\n\r\n  useEffect(() => {\r\n    const { userType } = props;\r\n\r\n    switch (userType) {\r\n      case CUSTOMER:\r\n        setImageClass(\"reg_customer_image\");\r\n        setLabel(\"Customer\");\r\n        break;\r\n      case SERVICE_PROVIDER:\r\n        setImageClass(\"reg_service_image\");\r\n        setLabel(\"Service Provider\");\r\n        setLoginTo(\"/login/service\");\r\n        break;\r\n      default:\r\n        setImageClass(\"reg_customer_image\");\r\n        setLabel(\"Customer\");\r\n        break;\r\n    }\r\n  }, [props.userType]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"password\") {\r\n      setRegForm({ ...regForm, password: value });\r\n    } else if (name === \"serviceProviderName\") {\r\n      const { serviceProvider } = regForm;\r\n      serviceProvider.serviceProviderName = value;\r\n      setRegForm({ ...regForm, serviceProvider });\r\n    } else if (name === \"serviceTypes\") {\r\n      const { serviceProvider } = regForm;\r\n      serviceProvider.serviceTypes[0] = value;\r\n      setRegForm({ ...regForm, serviceProvider });\r\n    } else {\r\n      const { user } = regForm;\r\n      user[name] = value;\r\n      setRegForm({ ...regForm, user });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { onSubmit, userType } = props;\r\n    const { user, password, serviceProvider } = regForm;\r\n    if (userType === CUSTOMER) {\r\n      user.role = CUSTOMER;\r\n      onSubmit({ user, password });\r\n    } else {\r\n      user.role = SERVICE_PROVIDER;\r\n      onSubmit({ user, password, serviceProvider });\r\n    }\r\n  };\r\n\r\n  const { userType, message, error } = props;\r\n\r\n  return (\r\n    <div className=\"reg_container\">\r\n      <div className=\"half\">\r\n        <div className=\"reg_form\">\r\n          <ValidatorForm\r\n            style={{ border: \"transparent\" }}\r\n            noValidate\r\n            validated={\"true\"}\r\n            onSubmit={onSubmit}\r\n          >\r\n            <Typography\r\n              className=\"reg_form_heading\"\r\n              variant=\"h6\"\r\n              component=\"h6\"\r\n            >\r\n              {label} Registration\r\n            </Typography>\r\n            <div className={\"reg_form_grid\"}>\r\n              {userType === SERVICE_PROVIDER && (\r\n                <>\r\n                  <div>\r\n                    <TextValidator\r\n                      name={\"serviceProviderName\"}\r\n                      value={regForm.serviceProvider[\"serviceProviderName\"]}\r\n                      label={\"Service Provider Name\"}\r\n                      fullWidth={true}\r\n                      onChange={onChange}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"Service Provder Name is required\"]}\r\n                      variant=\"outlined\"\r\n                      required\r\n                    />\r\n                    <br />\r\n                  </div>\r\n                  <div>\r\n                    <SelectValidatorCustom\r\n                      options={serviceTypes}\r\n                      fullWidth={true}\r\n                      name={\"serviceTypes\"}\r\n                      inputLabel={\"Select Service Type  *\"}\r\n                      value={regForm.serviceProvider.serviceTypes[0]}\r\n                      onChange={onChange}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"this field is required\"]}\r\n                      variant=\"outlined\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* Forms fields to create user */}\r\n              {userForm.map((x, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <TextValidator\r\n                      name={x.value}\r\n                      value={\r\n                        x.value === \"password\"\r\n                          ? regForm[x.value]\r\n                          : regForm.user[x.value]\r\n                      }\r\n                      type={\r\n                        x.value !== \"password\"\r\n                          ? \"text\"\r\n                          : showPassword\r\n                          ? \"text\"\r\n                          : \"password\"\r\n                      }\r\n                      label={x.label}\r\n                      fullWidth={true}\r\n                      onChange={onChange}\r\n                      validators={x.validators}\r\n                      errorMessages={x.errorMessages}\r\n                      variant=\"outlined\"\r\n                      required={x.required}\r\n                      InputProps={\r\n                        x.value === \"password\"\r\n                          ? {\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton\r\n                                    value=\"isPasswordShown\"\r\n                                    aria-label=\"Toggle password visibility\"\r\n                                    onClick={() =>\r\n                                      setShowPassword(!showPassword)\r\n                                    }\r\n                                  >\r\n                                    {showPassword ? (\r\n                                      <VisibilityOff />\r\n                                    ) : (\r\n                                      <Visibility />\r\n                                    )}\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }\r\n                          : {}\r\n                      }\r\n                    />\r\n                    <br />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <br />\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Register Now\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            {message && (\r\n              <>\r\n                <Alert severity={error ? \"error\" : \"success\"}>\r\n                  <AlertTitle>{error ? \"Oops !!\" : \"Good Job !!!\"}</AlertTitle>\r\n                  <p>\r\n                    {error ? (\r\n                      `Some thing went wrong, this can be a reason:-${message}`\r\n                    ) : (\r\n                      <span>\r\n                        {`Good Job !! ${message}, to login,`}\r\n                        <Link to={loginTo}>click here</Link>\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </Alert>\r\n                <br />\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            <Typography>\r\n              Already registered? <Link to={loginTo}>Click here to login</Link>\r\n            </Typography>\r\n          </ValidatorForm>\r\n        </div>\r\n      </div>\r\n      <div className=\"half\">\r\n        <div className={imageClass}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}