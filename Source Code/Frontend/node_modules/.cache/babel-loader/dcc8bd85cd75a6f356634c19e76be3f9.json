{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\src\\\\pages\\\\viewServiceRequests\\\\index.js\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchServiceRequestsById, updateService } from \"../../redux/services/services\";\nimport { CUSTOMER, SERVICE_PROVIDER } from \"../../constants/otherConstants\";\nimport CustomTable from \"../../components/table\";\nvar headers = [{\n  headerName: \"Status\",\n  field: \"status\"\n}, {\n  headerName: \"Created On\",\n  field: \"createDate\",\n  type: \"date\"\n}, {\n  headerName: \"Modified On\",\n  field: \"modifyDate\",\n  hidden: true,\n  type: \"date\"\n}, {\n  headerName: \"Completed On\",\n  field: \"completionDate\",\n  type: \"date\"\n}, {\n  headerName: \"Service Type\",\n  field: \"serviceType\"\n}, {\n  headerName: \"Service Request For\",\n  field: \"customerName\"\n}, {\n  headerName: \"Service Provider Name\",\n  field: \"serviceProviderName\"\n}];\n\nvar ViewServices = function ViewServices(props) {\n  console.log(\"hello\");\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  useEffect(function () {\n    var user = props.user,\n        fetchServiceRequestsById = props.fetchServiceRequestsById,\n        services = props.services;\n    var role = user.role,\n        id = user.id,\n        firstName = user.firstName;\n    setLabel(\"Service Requests raised by \" + firstName);\n    var userUrl = \"\";\n\n    if (role === CUSTOMER) {\n      userUrl = \"user_requests\";\n    }\n\n    if (role === SERVICE_PROVIDER) {\n      userUrl = \"sp_requests\";\n    }\n\n    fetchServiceRequestsById(userUrl, id);\n  }, []);\n  useEffect(function () {\n    var services = props.services;\n\n    if (data !== services) {\n      setData(services);\n    }\n  }, [props.services]);\n  useEffect(function () {\n    var user = props.user,\n        fetchServiceRequestsById = props.fetchServiceRequestsById,\n        serviceUpdateResponse = props.serviceUpdateResponse;\n    var role = user.role,\n        id = user.id,\n        firstName = user.firstName;\n    setLabel(\"Service Requests raised by \" + firstName);\n    var userUrl = \"\";\n\n    if (role === CUSTOMER) {\n      userUrl = \"user_requests\";\n    }\n\n    if (role === SERVICE_PROVIDER) {\n      userUrl = \"sp_requests\";\n    }\n\n    fetchServiceRequestsById(userUrl, id);\n  }, [props.serviceUpdateResponse]);\n  var user = props.user,\n      updateService = props.updateService;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, label)), /*#__PURE__*/React.createElement(CustomTable, {\n    data: data,\n    headers: headers,\n    label: label,\n    user: user,\n    updateService: updateService,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    services: state.fetchServicesReducer.services,\n    serviceUpdateResponse: state.updateServiceReducer.serviceUpdateResponse\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchServiceRequestsById: fetchServiceRequestsById,\n    updateService: updateService\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewServices);","map":{"version":3,"names":["bindActionCreators","connect","React","useEffect","useState","Helmet","fetchServiceRequestsById","updateService","CUSTOMER","SERVICE_PROVIDER","CustomTable","headers","headerName","field","type","hidden","ViewServices","props","console","log","data","setData","label","setLabel","user","services","role","id","firstName","userUrl","serviceUpdateResponse","mapStateToProps","state","fetchServicesReducer","updateServiceReducer","mapDispatchToProps","dispatch"],"sources":["C:/Users/Lenovo/Desktop/Project/Frontend/src/pages/viewServiceRequests/index.js"],"sourcesContent":["import { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n  fetchServiceRequestsById,\r\n  updateService,\r\n} from \"../../redux/services/services\";\r\nimport { CUSTOMER, SERVICE_PROVIDER } from \"../../constants/otherConstants\";\r\nimport CustomTable from \"../../components/table\";\r\n\r\nconst headers = [\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"status\",\r\n  },\r\n  {\r\n    headerName: \"Created On\",\r\n    field: \"createDate\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Modified On\",\r\n    field: \"modifyDate\",\r\n    hidden: true,\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Completed On\",\r\n    field: \"completionDate\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    headerName: \"Service Type\",\r\n    field: \"serviceType\",\r\n  },\r\n\r\n  {\r\n    headerName: \"Service Request For\",\r\n    field: \"customerName\",\r\n  },\r\n  {\r\n    headerName: \"Service Provider Name\",\r\n    field: \"serviceProviderName\",\r\n  },\r\n];\r\n\r\nconst ViewServices = (props) => {\r\n  console.log(\"hello\");\r\n  const [data, setData] = useState([]);\r\n  const [label, setLabel] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const { user, fetchServiceRequestsById, services } = props;\r\n\r\n    const { role, id, firstName } = user;\r\n    setLabel(\"Service Requests raised by \" + firstName);\r\n    let userUrl = \"\";\r\n    if (role === CUSTOMER) {\r\n      userUrl = \"user_requests\";\r\n    }\r\n    if (role === SERVICE_PROVIDER) {\r\n      userUrl = \"sp_requests\";\r\n    }\r\n\r\n    fetchServiceRequestsById(userUrl, id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { services } = props;\r\n    if (data !== services) {\r\n      setData(services);\r\n    }\r\n  }, [props.services]);\r\n\r\n  useEffect(() => {\r\n    const { user, fetchServiceRequestsById, serviceUpdateResponse } = props;\r\n\r\n    const { role, id, firstName } = user;\r\n    setLabel(\"Service Requests raised by \" + firstName);\r\n    let userUrl = \"\";\r\n    if (role === CUSTOMER) {\r\n      userUrl = \"user_requests\";\r\n    }\r\n    if (role === SERVICE_PROVIDER) {\r\n      userUrl = \"sp_requests\";\r\n    }\r\n\r\n    fetchServiceRequestsById(userUrl, id);\r\n  }, [props.serviceUpdateResponse]);\r\n\r\n  const { user, updateService } = props;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>{label}</title>\r\n      </Helmet>\r\n      <CustomTable\r\n        data={data}\r\n        headers={headers}\r\n        label={label}\r\n        user={user}\r\n        updateService={updateService}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  services: state.fetchServicesReducer.services,\r\n  serviceUpdateResponse: state.updateServiceReducer.serviceUpdateResponse,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ fetchServiceRequestsById, updateService }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewServices);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}