{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Project\\\\Frontend\\\\src\\\\pages\\\\createServiceRequest\\\\index.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport CreateServiceForm from \"../../components/createServiceRequestForm\";\nimport { fetchSPByST, createService } from \"../../redux/services/services\";\n\nvar CreateService = function CreateService(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  useEffect(function () {\n    var error = props.error,\n        serviceResponse = props.serviceResponse;\n\n    if (error) {\n      setMessage(error.message);\n      setError(true);\n    }\n\n    setTimeout(function () {\n      setMessage(\"\");\n      setError(false);\n    }, 10000);\n\n    if (Object.keys(serviceResponse).length > 0) {\n      setMessage(serviceResponse.message);\n    }\n\n    setTimeout(function () {\n      setMessage(\"\");\n    }, 10000);\n  }, [props.error, props.serviceResponse]);\n\n  var onServiceTypeSelect = function onServiceTypeSelect(serviceType) {\n    var fetchSPByST = props.fetchSPByST;\n    fetchSPByST(serviceType);\n  };\n\n  var user = props.user,\n      serviceProviders = props.serviceProviders,\n      createService = props.createService;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Create Service Request\")), /*#__PURE__*/React.createElement(CreateServiceForm, {\n    user: user,\n    serviceProviders: serviceProviders,\n    onServiceTypeSelect: onServiceTypeSelect,\n    createService: createService,\n    message: message,\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    serviceProviders: state.fetchSPBySTReducer.responseSPByST,\n    serviceResponse: state.createServiceReducer.serviceResponse,\n    error: state.createServiceReducer.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchSPByST: fetchSPByST,\n    createService: createService\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateService);","map":{"version":3,"names":["React","useEffect","useState","Helmet","bindActionCreators","connect","CreateServiceForm","fetchSPByST","createService","CreateService","props","message","setMessage","error","setError","serviceResponse","setTimeout","Object","keys","length","onServiceTypeSelect","serviceType","user","serviceProviders","mapStateToProps","state","fetchSPBySTReducer","responseSPByST","createServiceReducer","mapDispatchToProps","dispatch"],"sources":["C:/Users/Lenovo/Desktop/Project/Frontend/src/pages/createServiceRequest/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateServiceForm from \"../../components/createServiceRequestForm\";\r\nimport { fetchSPByST, createService } from \"../../redux/services/services\";\r\n\r\nconst CreateService = (props) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { error, serviceResponse } = props;\r\n\r\n    if (error) {\r\n      setMessage(error.message);\r\n      setError(true);\r\n    }\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n      setError(false);\r\n    }, 10000);\r\n\r\n    if (Object.keys(serviceResponse).length > 0) {\r\n      setMessage(serviceResponse.message);\r\n    }\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 10000);\r\n  }, [props.error, props.serviceResponse]);\r\n\r\n  const onServiceTypeSelect = (serviceType) => {\r\n    const { fetchSPByST } = props;\r\n    fetchSPByST(serviceType);\r\n  };\r\n\r\n  const { user, serviceProviders, createService } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Create Service Request</title>\r\n      </Helmet>\r\n      <CreateServiceForm\r\n        user={user}\r\n        serviceProviders={serviceProviders}\r\n        onServiceTypeSelect={onServiceTypeSelect}\r\n        createService={createService}\r\n        message={message}\r\n        error={error}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  serviceProviders: state.fetchSPBySTReducer.responseSPByST,\r\n  serviceResponse: state.createServiceReducer.serviceResponse,\r\n  error: state.createServiceReducer.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ fetchSPByST, createService }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateService);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}